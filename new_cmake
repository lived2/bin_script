#!/bin/zsh

if [ $# -eq 0 ];then
    echo -n "Project name: "
    read project
    echo -n "Compiler: "
    read compiler
elif [ $# -eq 1 ];then
    project=$1
elif [ $# -eq 1 ] || [ $# -eq 2 ];then
    project=$1
    compiler=$2
else
    echo "Wrong argument!"
    echo "Usage: $0 <project_name> [compiler]"
fi

if [ -z "$project" ]; then
  echo "Null project name"
  exit 1
fi
if [ -z "$compiler" ]; then
  compiler="gcc"
fi

if [ "$compiler" = "g++" ]; then
  compiler="gcc"
elif [ "$compiler" = "clang++" ]; then
  compiler="clang"
fi

#echo $project

if [ -e $project ]; then
    echo "Already exist!"
    exit 1
fi

echo "Creating project folder..."
#mkdir -p $project/src
#mkdir $project
mkdir -p $project/target
mkdir -p $project/src
mkdir -p $project/inc

#main_file=$project".cpp"
#main_file="src/main.cpp"
main_file="src/main.cpp"
main_header="inc/main.h"

echo "Creating CMakeLists.txt..."
echo "cmake_minimum_required(VERSION 3.16)" > $project/CMakeLists.txt
#echo "set(CMAKE_CXX_FLAGS \"-Wall -Wextra -W -std=c++17\")" >> $project/CMakeLists.txt
if [ "$compiler" = "gcc" ]; then
  echo "#set(CMAKE_C_COMPILER \"clang\")" >> $project/CMakeLists.txt
  echo "#set(CMAKE_CXX_COMPILER \"clang++\")" >> $project/CMakeLists.txt
  echo "#set(CMAKE_CXX_FLAGS \"-Wall -Wextra -W -std=c++23 -stdlib=libc++\")" >> $project/CMakeLists.txt
  echo "set(CMAKE_CXX_FLAGS \"-Wall -Wextra -W -std=c++23\")" >> $project/CMakeLists.txt
elif [ "$compiler" = "clang" ]; then
  echo "set(CMAKE_C_COMPILER \"clang\")" >> $project/CMakeLists.txt
  echo "set(CMAKE_CXX_COMPILER \"clang++\")" >> $project/CMakeLists.txt
  echo "set(CMAKE_CXX_FLAGS \"-Wall -Wextra -W -std=c++23 -stdlib=libc++\")" >> $project/CMakeLists.txt
  echo "#set(CMAKE_CXX_FLAGS \"-Wall -Wextra -W -std=c++23\")" >> $project/CMakeLists.txt
fi
echo "set(CMAKE_CXX_FLAGS_DEBUG \"-g -DDEBUG\")" >>  $project/CMakeLists.txt
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
  echo "set(CMAKE_CXX_FLAGS_RELEASE \"-O3 -s\")" >> $project/CMakeLists.txt
else
  echo "set(CMAKE_CXX_FLAGS_RELEASE \"-O3\")" >> $project/CMakeLists.txt
fi
echo "project (" >> $project/CMakeLists.txt
echo "    "$project >> $project/CMakeLists.txt
echo "    VERSION 0.1" >> $project/CMakeLists.txt
echo "    DESCRIPTION" $project >> $project/CMakeLists.txt
echo "    LANGUAGES CXX)" >> $project/CMakeLists.txt
echo "add_executable(" >> $project/CMakeLists.txt
echo "    "$project >> $project/CMakeLists.txt
echo "    "$main_file >> $project/CMakeLists.txt
echo "    )" >> $project/CMakeLists.txt
echo "target_include_directories(" >> $project/CMakeLists.txt
echo "    "$project >> $project/CMakeLists.txt
echo "    PRIVATE" >> $project/CMakeLists.txt
echo "    inc" >> $project/CMakeLists.txt
echo "    )" >> $project/CMakeLists.txt

echo "Creating "$main_file"..."
echo "#include <main.h>" > $project/$main_file
echo "" >> $project/$main_file
echo "int main() {" >> $project/$main_file
echo "}" >> $project/$main_file

echo "Creating "$main_header"..."
touch $project/$main_header

cmake -S "./"$project -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DCMAKE_BUILD_TYPE=Release -B "./"$project"/target/release"
cmake -S "./"$project -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DCMAKE_BUILD_TYPE=Debug -B "./"$project"/target/debug"

cd $project
ln -s target/debug/compile_commands.json compile_commands.json

#mkdir -p ./target/debug
echo "exec ./"$project '$@' > target/debug/run.sh
chmod 755 target/debug/run.sh

